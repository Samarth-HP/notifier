// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./prisma/generated/client"
  // binaryTargets = ["native", "linux-arm-openssl-1.1.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TextType {
  UNICODE
  ENGLISH
}

enum ProviderName {
  CDAC
  GUPSHUP
}

enum Status {
  QUEUED
  SENT_TO_PROVIDER
  DELIEVERED
  FAILED_AT_PROVIDER
  FAILED
}

enum Event {
  QUEUED
  SENT_TO_PROVIDER
  DELIEVERED
  FAILED_AT_PROVIDER
  FAILED
}

model Provider {
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  id           Int          @id @default(autoincrement())
  channel      String
  providerName ProviderName
  config       Json
  unitCost     Float
  Sms          Sms[]
  FCM          FCM[]
}

model Sms {
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  id                BigInt   @id @default(autoincrement())
  providerId        Int
  provider          Provider @relation(fields: [providerId], references: [id])
  phone             String
  user              String   @db.Uuid
  org               String   @db.Uuid
  text              String
  type              TextType
  status            Status   @default(QUEUED)
  retries           Int      @default(0)
  providerMessageId String?
  meta              Json?
  Audit             Audit[]
}

model FCM {
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  id                BigInt    @id @default(autoincrement())
  deviceId          String
  user              String    @db.Uuid
  org               String    @db.Uuid
  text              String
  type              TextType
  status            Status    @default(QUEUED)
  retries           Int       @default(0)
  providerMessageId String?
  meta              Json?
  Audit             Audit[]
  Provider          Provider? @relation(fields: [providerId], references: [id])
  providerId        Int?
}

model Audit {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        BigInt   @id @default(autoincrement())
  smsId     BigInt
  sms       Sms      @relation(fields: [smsId], references: [id])
  event     Event
  FCM       FCM?     @relation(fields: [fCMId], references: [id])
  fCMId     BigInt?
}

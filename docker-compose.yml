version: "3"
services:
  # broker:
  #   container_name: broker
  #   networks:
  #     - broker
  #   image: "docker.io/bitnami/rabbitmq:latest"
  #   environment:
  #     - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
  #     - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
  #   ports:
  #     - "4369:4369"
  #     - "5672:5672"
  #     - "25672:25672"
  #     - "15672:15672"
  #   volumes:
  #     - ${RABBITMQ_DATA_DIR}:/bitnami

  db:
    image: postgres:12
    ports:
      - "${DB_PORT}:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ${DB_DATA_DIR}:/var/lib/postgresql/data/pgdata

  graphql-engine:
    image: ${HASURA_VERSION}
    ports:
      - "5002:8080"
    depends_on:
      - db
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/${DB_NAME}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_PASS}

  cdac-service:
    image: samagragovernance/cdac-service:latest
    restart: always
    environment:
      USERNAME: "${CDAC_USERNAME}"
      SENDER_ID: "${CDAC_SENDER_ID}"
      PASSWORD: "${CDAC_PASSWORD}"
      SECURE_KEY: "${CDAC_SECURE_KEY}"
    ports:
      - "5003:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://cdac:8080/api"]
      interval: 2s
      timeout: 5s
      retries: 20

  brokerOfficial:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USERNAME}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"
    ports:
      - "5672:5672"
      - "15672:15672"

networks:
  broker:
    driver: bridge
